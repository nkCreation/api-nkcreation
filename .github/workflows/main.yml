name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

jobs:
  # —— 🚀 Deployment
  ci:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    if: contains('refs/heads/master', github.ref) == true

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v2.1.2
        with:
          node-version: ${{ matrix.node }}

      - name: Create .ENV file 🏗
        run: |
          touch .env
          echo HOST=${{ secrets.ENV_HOST }} >> .env
          echo PORT=${{ secrets.ENV_PORT }} >> .env
          echo DATABASE_HOST=${{ secrets.ENV_DATABASE_HOST }} >> .env
          echo DATABASE_PORT=${{ secrets.ENV_DATABASE_PORT }} >> .env
          echo DATABASE_NAME=${{ secrets.ENV_DATABASE_NAME }} >> .env
          echo DATABASE_USERNAME=${{ secrets.ENV_DATABASE_USERNAME }} >> .env
          echo DATABASE_PASSWORD=${{ secrets.ENV_DATABASE_PASSWORD }} >> .env
          echo MAILJET_PUBLIC_KEY=${{ secrets.ENV_MAILJET_PUBLIC_KEY }} >> .env
          echo MAILJET_SECRET_KEY=${{ secrets.ENV_MAILJET_SECRET_KEY }} >> .env
          echo MAILJET_FROM=${{ secrets.ENV_MAILJET_FROM }} >> .env
          echo MAILJET_FROM_NAME=${{ secrets.ENV_MAILJET_FROM_NAME }} >> .env
          echo MAILJET_TO=${{ secrets.ENV_MAILJET_TO }} >> .env
          echo MAILJET_TO_NAME=${{ secrets.ENV_MAILJET_TO_NAME }} >> .env
          echo ADMIN_JWT_SECRET=${{ secrets.ENV_ADMIN_JWT_SECRET }} >> .env
          echo NODE_ENV=${{ secrets.ENV_NODE_ENV }} >> .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies 👨🏻‍💻
        run: npm ci

      - name: Run build task 🛠
        run: NODE_ENV=production npm run build

      - name: Deploy to Server 🚀
        uses: easingthemes/ssh-deploy@v2.1.5
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PORT: ${{ secrets.REMOTE_PORT }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

      - name: Start server ✅
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.REMOTE_PORT }}
          script: cd api-nkcreation && pm2 del --silent apinkcreation || ':' && pm2 start npm --name apinkcreation -- run start
